# Dockerfile

# Pull base image
FROM python:3.7

# Set environment variables
# PYTHONDONTWRITEBYTECODE means Python won't try to write .pyc files which we also do not desire.
# PYTHONUNBUFFERED ensures our console output looks familiar and is not buffered by Docker.
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Copy project
COPY . /code/

# Set work directory
# The next line sets the WORKDIR to /code. This means the working directory is located at /code so in the future to run any commands like manage.py we can just use WORKDIR rather than need to remember where exactly on Docker our code is actually located.
WORKDIR /code

# Install dependencies
# Then we install our dependencies, making sure we have the latest version of pip, installing pipenv, copying our local Pipfile and Pipfile.lock into Docker and then running it to install our dependencies. The RUN command lets us run commands in Docker just as we would on the command line.
#RUN pip install pipenv
#COPY Pipfile Pipfile.lock /code/
#RUN pipenv install --system
RUN pip install --upgrade pip
RUN pip install -r requirements.txt

